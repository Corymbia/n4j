---
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  EC2 lightweight resource template

Parameters:

  AssociatePublicIpAddress:
    Description: Associate a public ip address for the instance
    Type: String
    AllowedValues:
      - 'on'
      - 'off'
    Default: 'on'

  DisableApiTermination:
    Description: Disable termination of the instance via api
    Type: String
    AllowedValues:
      - 'on'
      - 'off'
    Default: 'off'

  ImageId:
    Description: The machine image identifier
    Type: String

  InstanceType:
    Description: The instance type
    Type: String

  KeyName:
    Description: EC2 keypair for instance SSH access
    Type: String
    Default: ''

  Monitoring:
    Description: Enable cloudwatch detailed monitoring
    Type: String
    AllowedValues:
      - 'on'
      - 'off'
    Default: 'off'

Conditions:

  UseKeyNameParameter: !Not
    - !Equals
      - !Ref KeyName
      - ''

Resources:

  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: '10.20.30.0/24'

  Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: '10.20.30.0/24'
      MapPublicIpOnLaunch: on
      VpcId: !Ref Vpc

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Metadata test security group
      VpcId: !Ref Vpc
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: '0.0.0.0/0'

  Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service:
                - ec2.amazonaws.com
      Policies:
        - PolicyName: instance-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: ec2:Describe*
                Resource: '*'
              - Effect: Allow
                Action:
                  - s3:List*
                  - s3:Get*
                Resource: '*'

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref Role

  LaunchTemplateMonitoringOnly:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        Monitoring:
          Enabled: !Ref Monitoring

  LaunchTemplateTagsOnly:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        TagSpecifications:
          -  ResourceType: instance
             Tags:
               - Key: tag-1-key
                 Value: tag-1-value

  LaunchTemplateTopLevel:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        Placement:
          AvailabilityZone:
            Fn::Select:
              - '0'
              - Fn::GetAZs: !Ref AWS::Region

  LaunchTemplateFull:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        BlockDeviceMappings:
          - DeviceName: /dev/vdf
            NoDevice: ''
        DisableApiTermination: !Ref DisableApiTermination
        IamInstanceProfile:
          Arn: !GetAtt InstanceProfile.Arn
        ImageId: !Ref ImageId
        InstanceType: !Ref InstanceType
        Monitoring:
          Enabled: !Ref Monitoring
        NetworkInterfaces:
          - AssociatePublicIpAddress: !Ref AssociatePublicIpAddress
            DeleteOnTermination: on
            Description: Primary network interface
            DeviceIndex: 0
            Groups:
              - !GetAtt SecurityGroup.GroupId
            SubnetId: !Ref Subnet
        TagSpecifications:
          -  ResourceType: instance
             Tags:
               - Key: tag-1-key
                 Value: tag-1-value
        UserData:
          Fn::Base64: !Sub |
            User data for instance from image ${ImageId}